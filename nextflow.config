
nextflow {
    enable.moduleBinaries = true
}

/*
 * Default pipeline parameters. They can be overriden on the command line eg.
 * given `params.foo` specify on the run command line `--dataset_name some_value`.
 */

params {
    fetch_datasets = true
    dataset_names = 'luad_mskcc_2015,nsclc_mskcc_2015,luad_mskcc_2020,nsclc_mskcc_2018'
    datatype = "['categorical', 'numerical']"

    visualize = true

    datadir = 'Data'

    mutations_data = "${params.datadir}/mutations.txt"
    
    preprocess = true
    test_set_size = 0.2
    random_seed = 42
    preproc_data_folder = ""
    cols_to_remove = ""

    model_type = "['xgboost']"
    
    train = true

    predict = true
    predict_models = "${params.preproc_data_folder}/*.yml"
    predict_data_path = ""
    predict_output_file = ""

    output_dir = 'results'
}

trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
    file = "${params.output_dir}/reports/trace.txt"
    trace.overwrite = true
    raw = true
}

/*
 * Execution profiles for different environments.
 */
profiles {


    slurm {
        process.executor = 'slurm'
    }
     
    singularity {
        singularity.enabled = true
    }

    conda {
        process.conda = "$baseDir/conda.yml"
        conda.enabled = true
    }
    
    docker {
        docker.enabled = true
    }

    example {
        params.make_inputs = true
        params.targets = "class-00,class-01,class-02"
    }

    wave {
        process.conda = "$baseDir/conda.yml"
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        wave.enabled = true
        wave.strategy = 'conda'
        wave.build.conda.commands = [
            'USER root',
            'RUN apt-get update -y && apt-get install -y procps'
        ]
    }
}
