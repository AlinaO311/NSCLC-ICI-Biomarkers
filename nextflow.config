/*
 * Copyright (c) 2023.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code Form is "Incompatible With Secondary Licenses", as
 * defined by the Mozilla Public License, v. 2.0.
 *
 */
manifest {
    description = 'Proof-of-concept pipeline for performing machine learning models on Non small cell lung cancer with Nextflow'
    author = 'Alina Orozco '
    mainScript = "main.nf"
    defaultBranch = "master"
    nextflowVersion = '>=22.10.0'
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

// Trace and Timeline settings
trace {
    enabled = true
    file = "${params.output_dir}/trace_${trace_timestamp}.txt"
}

timeline {
    enabled = true
    file = "${params.output_dir}/timeline_${trace_timestamp}.html"
}

// Report settings
report {
    enabled = true
    file = "${params.output_dir}/report_${trace_timestamp}.html"
}

nextflow {
    enable.moduleBinaries = true
}

/*
 * Default pipeline parameters. They can be overriden on the command line eg.
 * given `params.foo` specify on the run command line `--dataset_name some_value`.
 */
params {
    output_dir = 'results'
    datadir = 'Data'
    mutations_data = "${params.datadir}/mutations.txt"
    feature_data = "${params.datadir}/features.txt"

    fetch_dataset = true
    dataset_names = 'luad_mskcc_2015,nsclc_mskcc_2015,luad_mskcc_2020,nsclc_mskcc_2018'
    datatype = ['categorical', 'numerical']

    test_set_size = 0.2
    random_seed = 42
    preprocess = true

    preprocess = true
    preproc_data = ""
    cols_to_remove = ""

    train = true
    model_type = ['xgboost','keras']

    infer_from_data = true
    predict_models = ""
    predict_data_path = ""
    predict_output_path = ""

    exp_name = ""

    analyze = true

}


/*
 * Dynamic process directives is to enable tasks that fail due to insufficient memory to be resubmitted
 * for a second attempt with more memory.
 */



/*
 * Execution profiles for different environments.
 */
profiles {

    gridengine {
       process {
            executor = 'sge'
            queue = 'development' // Replace with your Slurm partition name
            // Default resources for all processes
            cpus = 4
            memory = '8 GB'
            walltime = '2h' // Adjust the time as needed
            beforeScript = '''
            module load nextflow/23.04.3
            module load java/jdk19.0.2
            '''
            clusterOptions = '-l -N nf_test -j y -pe mpi 4 -q development.q'
        }
        withName: analyze_dataset {
        cpus = 8
        memory = '32 GB'
        time = '2h' // Custom time for this process
        // Custom qsub options for PROCESS_5
        clusterOptions = '-l h_rt=02:00:00 -l h_vmem=32G -pe smp 8'
        errorStrategy = 'retry'
        maxRetries = 3
        memory = { 2.GB * task.attempt }
        time = { 1.hour * task.attempt }
       }
    }

    conda {
        process.conda = "$baseDir/conda.yml"
        conda.enabled = true
    }
    
    docker {
        docker.enabled = true
    }

    example {
        params.make_inputs = true
        params.targets = "class-00,class-01,class-02"
    }

    wave {
        process.conda = "$baseDir/conda.yml"
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        wave.enabled = true
        wave.strategy = 'conda'
        wave.build.conda.commands = [
            'USER root',
            'RUN apt-get update -y && apt-get install -y procps'
        ]
    }
}
